Problem Description
"A calendar for recurring meetings". It doesn't show as Month or Week view, it's a list of recurring meetings and lets you manage them.

Acceptance Criteria
Sign in with Google for GCal. Get only the minimal permissions scope needed (e.g. calendar.events.readonly or calendar.readonly - whichever is needed)
It should look only at the user's primary calendar. (If you can't determine primary, then given an option to choose which calendar(s) it should analyze)
Fetch & list in a <table> all recurring meetings that have instances in the future (or in upcoming 12 months) that I haven't Declined
For each meeting, show the following columns:
Name of meeting
Frequency - plain English description of the frequency of the recurring meeting, similar to Google Calendar, e.g. "Every 6 months on second Monday"
Last Date - date of the last instance (in the past) of this recurring meeting, show it in relative date (use timeago package or similar)
Next date - date of the next scheduled instance of this recurring meeting, show it in relative date (use timeago package or similar)
Stats
"Time between instances": how long from Last Date to Next Date (this may differ from frequency if a meeting was canceled or reschedule) - e.g. "4 months between meetings"
"Events in next 12mo": # of event instances in next 12 months (computed either based on frequency OR by actually counting instances - I don't care, but just make it clear in the code which is being used).
By default sort by "Next instance date" (soonest first) but provide a dropdown with these sorting options:
Next Instance Date (soonest first, asc only)
Alphabetical (asc only)
Frequency (asc or desc) â€” should sort by "Events in next 12mo" column, like showing which meetings are most rare (if Asc) or most commonly occuring (if Desc)
Give aggregate stats at the top:
# of recurring events (should equal the number of rows in the table)
# of recurring event instances per year (should be the sum of the "# of event instances in next 12 months" column)
Technical Details
(This is my first Replit & Bounties so let me know if any of this doesn't make sense)
FYI Note that in a FUTURE milestone I'll want to give an option to Edit these recurring events back to the Google calendar, so keep that in mind when architecting the code.
TypeScript
TailwindCSS for UI
Docker
If possible, try to make this stateless (avoid using a database if not needed)
A README.md with:
including detailed instructions on how to set up anything needed on the Google side for this app
instructions for how to run locally with Docker
instructions on how to deploy it to Replit, Vercel, or Render
Timelines / Milestones
I consider all of the above Milestone 1. I'll create a 2nd Bounty for Editing/Managing the events after M1 is complete.